import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            jni.srcDirs = [] //disable automatic ndk-build
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



    task ndkCompile(type: Exec, description: 'Compile native libs') {
        def ndkDir = project.plugins.findPlugin('com.android.library').getNdkFolder()

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd", '--directory=./', 'NDK_PROJECT_PATH=./'
        } else {
            commandLine "$ndkDir/ndk-build", '--directory=./', 'NDK_PROJECT_PATH=./'
        }
    }
    task ndkLibsToJar(type: Zip, dependsOn: 'ndkCompile', description: 'Create a JAR of the native libs') {
        destinationDir new File(buildDir, 'libs')
        baseName "nativeLibs"
        extension 'jar'
        from(new File(buildDir.parent, 'libs')) { include '**/*.so' }
        into 'lib/'
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkLibsToJar
    }
}

dependencies {
    compile 'com.android.support:support-annotations:21.0.0'
    compile fileTree(dir: new File(buildDir, 'libs'), include: 'nativeLibs.jar')
}
